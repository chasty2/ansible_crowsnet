---
# Setup NFS mounts and postgres container
- name: Service Config Block (root user)
  become: true
  tags: services
  block:
    - name: Create /mnt/postgres
      ansible.builtin.file:
        path: /mnt/postgres
        state: directory
        owner: ansible
        group: postgres
        mode: "0770"

    - name: Mount postgres NFS volume
      ansible.posix.mount:
        src: 192.168.4.11:/ssd_mirror/postgres
        path: /mnt/postgres
        opts: rw,sync,hard
        state: mounted
        fstype: nfs

    - name: Create mount point for postgres container data
      ansible.builtin.file:
        path: /mnt/postgres/data
        state: directory
        mode: "0700"

    # This is a rooted container. It will start at boot due to 'restart_policy: always'
    - name: Create postgres container
      containers.podman.podman_container:
        name: postgres
        image: docker.io/postgres:15.8
        ports:
          - "5432:5432"
        env:
          POSTGRES_PASSWORD: "{{ postgres_password }}"
        mount:
          - "type=bind,source=/mnt/postgres/data,destination=/var/lib/postgresql/data,rw=true"
        state: started
        restart_policy: always

# Working rootless config. A litle too hack-ey at this moment, but I want to hang on to it for now

# - name: Service Config Block (podman user)
#   remote_user: podman
#   tags: services
#   block:
#     - name: Create postgres container
#       containers.podman.podman_container:
#         name: postgres
#         image: docker.io/postgres:15.8
#         user: podman
#         userns: "keep-id"
#         ports:
#           - "5432:5432"
#         env:
#           POSTGRES_PASSWORD: "{{ postgres_password }}"
#           PGDATA: "/var/lib/postgresql/data/pgdata"
#         mount:
#           - "type=bind,source=/mnt/postgres/data,destination=/var/lib/postgresql/data,rw=true"
#           - "type=bind,source=/etc/passwd,destination=/etc/passwd,ro=true"
#         state: started
